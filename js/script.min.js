"use strict";
! function () {
    var t = navigator.userAgent.toLowerCase(),
        a = -1 !== t.indexOf("msie") ? parseInt(t.split("msie")[1], 10) : -1 !== t.indexOf("trident") ? 11 : -1 !== t.indexOf("edge") && 12;
    if (!1 !== a && a < 12) {
        var e = document.createElement("script");
        e.src = "./js/support.js", document.querySelector("head").appendChild(e)
    }
    var r = new Date,
        o = ($(document), $(window)),
        n = $("html"),
        i = $("body"),
        s = "rtl" === n.attr("dir"),
        l = n.hasClass("desktop"),
        d = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),
        c = {
            bootstrapTooltip: $("[data-bs-toggle='tooltip']"),
            bootstrapTabs: $(".tabs"),
            rdNavbar: $(".rd-navbar"),
            wow: $(".wow"),
            owl: $(".owl-carousel"),
            swiper: $(".swiper-container"),
            // selectFilter: $("select"),
            customToggle: $("[data-custom-toggle]"),
            customWaypoints: $("[data-custom-scroll-to]"),
            stepper: $("input[type='number']"),
            pageLoader: $(".page-loader"),
            copyrightYear: $("#copyright-year"),
            materialParallax: $(".parallax-container"),
            counter: document.querySelectorAll(".counter"),
            countdown: document.querySelectorAll(".countdown")
        };
    if (o.on("load", (function () {
        var spinner = function () {
            setTimeout(function () {
                if ($('#spinner').length > 0) {
                    $('#spinner').removeClass('show');
                }
            }, 1);
        };
        spinner(); 

        if (c.materialParallax.length)
            if (a || d)
                for (e = 0; e < c.materialParallax.length; e++) {
                    var s = $(c.materialParallax[e]),
                        l = s.data("parallax-img");
                    s.css({
                        "background-image": "url(" + l + ")",
                        "background-size": "cover"
                    })
                } else c.materialParallax.parallax();
        if (c.counter)
            for (let t = 0; t < c.counter.length; t++) {
                let a = c.counter[t],
                    e = (aCounter({
                        node: a,
                        duration: a.getAttribute("data-duration") || 1e3
                    }), function () {
                        Util.inViewport(this) && !this.classList.contains("animated-first") && (this.counter.run(), this.classList.add("animated-first"))
                    }.bind(a));
                (function () {
                    this.counter.params.to = parseInt(this.textContent, 10), this.counter.run()
                }).bind(a);
                e(), window.addEventListener("scroll", e)
            }
    })), $((function () {
        function t(t) {
            try {
                return t ? JSON.parse(t) : {}
            } catch (t) {
                return {}
            }
        }

        function e(t) {
            let a = t.el.querySelectorAll("[data-slide-bg]");
            for (let t = 0; t < a.length; t++) {
                let e = a[t];
                e.style.backgroundImage = "url(" + e.getAttribute("data-slide-bg") + ")"
            }
        }

        function d(t) {
            let a = $(t.$el[0]),
                e = $(t.slides[t.activeIndex]);
            a.find("[data-caption-animate]").each((function () {
                let t = $(this);
                t.removeClass("animated").removeClass(t.attr("data-caption-animate")).addClass("not-animated")
            })), e.find("[data-caption-animate]").each((function () {
                let t = $(this),
                    a = t.attr("data-caption-delay");
                setTimeout((function () {
                    t.removeClass("not-animated").addClass(t.attr("data-caption-animate")).addClass("animated")
                }), a ? parseInt(a) : 0)
            }))
        }

        function p(t) {
            window.innerWidth < 576 ? (c.bootstrapTooltip.tooltip("dispose"), c.bootstrapTooltip.tooltip({
                placement: "bottom"
            })) : (c.bootstrapTooltip.tooltip("dispose"), c.bootstrapTooltip.tooltip({
                placement: t
            }))
        }
        if (navigator.platform.match(/(Mac)/i) && n.addClass("mac"), c.copyrightYear.length && c.copyrightYear.text(r.getFullYear()), a && (12 === a && n.addClass("ie-edge"), 11 === a && n.addClass("ie-11"), a < 10 && n.addClass("lt-ie-10"), a < 11 && n.addClass("ie-10")), c.bootstrapTooltip.length) {
            var g = c.bootstrapTooltip.attr("data-bs-placement");
            p(g), o.on("resize orientationchange", (function () {
                p(g)
            }))
        }
     
        if (c.stepper.length && c.stepper.stepper({
            labels: {
                up: "",
                down: ""
            }
        }), l && $().UItoTop({
            easingType: "easeOutQuart",
            containerClass: "ui-to-top fa fa-angle-up",
            scrollSpeed: 100
        }), c.rdNavbar.length) {
            var h, v, b, m, w, y;
            for (h = ["-", "-sm-", "-md-", "-lg-", "-xl-", "-xxl-"], y = {}, m = v = 0, b = (w = [0, 576, 768, 992, 1200, 1600]).length; v < b; m = ++v) w[m], y[w[m]] || (y[w[m]] = {}), c.rdNavbar.attr("data" + h[m] + "layout") && (y[w[m]].layout = c.rdNavbar.attr("data" + h[m] + "layout")), c.rdNavbar.attr("data" + h[m] + "device-layout") && (y[w[m]].deviceLayout = c.rdNavbar.attr("data" + h[m] + "device-layout")), c.rdNavbar.attr("data" + h[m] + "hover-on") && (y[w[m]].focusOnHover = "true" === c.rdNavbar.attr("data" + h[m] + "hover-on")), c.rdNavbar.attr("data" + h[m] + "auto-height") && (y[w[m]].autoHeight = "true" === c.rdNavbar.attr("data" + h[m] + "auto-height")), c.rdNavbar.attr("data" + h[m] + "stick-up") && (y[w[m]].stickUp = "true" === c.rdNavbar.attr("data" + h[m] + "stick-up")), c.rdNavbar.attr("data" + h[m] + "stick-up-offset") && (y[w[m]].stickUpOffset = c.rdNavbar.attr("data" + h[m] + "stick-up-offset"));
            c.rdNavbar.RDNavbar({
                anchorNav: !0,
                stickUpClone: !!c.rdNavbar.attr("data-stick-up-clone") && "true" === c.rdNavbar.attr("data-stick-up-clone"),
                responsive: y
            }), c.rdNavbar.attr("data-body-class") && (document.body.className += " " + c.rdNavbar.attr("data-body-class"))
        }
        if (c.swiper.length)
            for (let a = 0; a < c.swiper.length; a++) {
                let r = c.swiper[a],
                    o = t(r.getAttribute("data-swiper")),
                    n = {
                        speed: 1e3,
                        loop: "false" !== r.getAttribute("data-loop"),
                        effect: r.hasAttribute("data-slide-effect") ? r.getAttribute("data-slide-effect") : "slide",
                        pagination: {
                            el: ".swiper-pagination",
                            clickable: !0
                        },
                        navigation: {
                            nextEl: ".swiper-button-next",
                            prevEl: ".swiper-button-prev"
                        },
                        autoplay: {
                            enabled: "false" !== r.getAttribute("data-autoplay"),
                            delay: isNaN(Number(r.getAttribute("data-autoplay"))) ? 5e3 : r.getAttribute("data-autoplay")
                        },
                        simulateTouch: "false" !== r.getAttribute("data-simulate-touch")
                    };
                o.on = {
                    init: function () {
                        e(this), d(this), this.on("slideChangeTransitionEnd", (function () {
                            d(this)
                        }))
                    }
                }, new Swiper(r, Util.merge([n, o]))
            }
        if (c.owl.length)
            for (m = 0; m < c.owl.length; m++) {
                var C = $(c.owl[m]);
                c.owl[m] = C, x(C)
            }

        function x(t) {
            for (var a = ["-", "-sm-", "-md-", "-lg-", "-xl-", "-xxl-"], e = [0, 576, 768, 992, 1200, 1600], r = {}, o = 0; o < e.length; o++) {
                r[e[o]] = {};
                for (var n = o; n >= -1; n--) !r[e[o]].items && t.attr("data" + a[n] + "items") && (r[e[o]].items = n < 0 ? 1 : parseInt(t.attr("data" + a[n] + "items"), 10)), !r[e[o]].stagePadding && 0 !== r[e[o]].stagePadding && t.attr("data" + a[n] + "stage-padding") && (r[e[o]].stagePadding = n < 0 ? 0 : parseInt(t.attr("data" + a[n] + "stage-padding"), 10)), !r[e[o]].margin && 0 !== r[e[o]].margin && t.attr("data" + a[n] + "margin") && (r[e[o]].margin = n < 0 ? 30 : parseInt(t.attr("data" + a[n] + "margin"), 10))
            }
            if (t.attr("data-dots-custom") && t.on("initialized.owl.carousel", (function (t) {
                var a = $(t.currentTarget),
                    e = $(a.attr("data-dots-custom")),
                    r = 0;
                a.attr("data-active") && (r = parseInt(a.attr("data-active"))), a.trigger("to.owl.carousel", [r, 300, !0]), e.find("[data-owl-item='" + r + "']").addClass("active"), e.find("[data-owl-item]").on("click", (function (t) {
                    t.preventDefault(), a.trigger("to.owl.carousel", [parseInt(this.getAttribute("data-owl-item")), 300, !0])
                })), a.on("translate.owl.carousel", (function (t) {
                    e.find(".active").removeClass("active"), e.find("[data-owl-item='" + t.item.index + "']").addClass("active")
                }))
            })), void 0 !== t.attr("data-numbering")) {
                var i = $(t.attr("data-numbering"));
                t.on("initialized.owl.carousel changed.owl.carousel", function (t) {
                    return function (a) {
                        a.namespace && (t.find(".numbering-current").text(a.item.index + 1), t.find(".numbering-count").text(a.item.count))
                    }
                }(i))
            }
            t.owlCarousel({
                autoplay: "true" === t.attr("data-autoplay"),
                loop: "false" !== t.attr("data-loop"),
                items: 1,
                rtl: s,
                center: "true" === t.attr("data-center"),
                dotsContainer: t.attr("data-pagination-class") || !1,
                navContainer: t.attr("data-navigation-class") || !1,
                mouseDrag: "false" !== t.attr("data-mouse-drag"),
                nav: "true" === t.attr("data-nav"),
                dots: "true" === t.attr("data-dots"),
                dotsEach: !!t.attr("data-dots-each") && parseInt(t.attr("data-dots-each"), 10),
                animateIn: !!t.attr("data-animation-in") && t.attr("data-animation-in"),
                animateOut: !!t.attr("data-animation-out") && t.attr("data-animation-out"),
                responsive: r,
                navText: function () {
                    try {
                        return JSON.parse(t.attr("data-nav-text"))
                    } catch (t) {
                        return []
                    }
                }(),
                navClass: function () {
                    try {
                        return JSON.parse(t.attr("data-nav-class"))
                    } catch (t) {
                        return ["owl-prev", "owl-next"]
                    }
                }()
            })
        }
        
        if (c.customToggle.length)
            for (m = 0; m < c.customToggle.length; m++) {
                (k = $(c.customToggle[m])).on("click", $.proxy((function (t) {
                    t.preventDefault();
                    var a = $(this);
                    $(a.attr("data-custom-toggle")).add(this).toggleClass("active")
                }), k)), "true" === k.attr("data-custom-toggle-hide-on-blur") && i.on("click", k, (function (t) {
                    t.target !== t.data[0] && $(t.data.attr("data-custom-toggle")).find($(t.target)).length && 0 === t.data.find($(t.target)).length && $(t.data.attr("data-custom-toggle")).add(t.data[0]).removeClass("active")
                })), "true" === k.attr("data-custom-toggle-disable-on-blur") && i.on("click", k, (function (t) {
                    t.target !== t.data[0] && 0 === $(t.data.attr("data-custom-toggle")).find($(t.target)).length && 0 === t.data.find($(t.target)).length && $(t.data.attr("data-custom-toggle")).add(t.data[0]).removeClass("active")
                }))
            }
        if (c.customWaypoints.length)
            for (m = 0; m < c.customWaypoints.length; m++) {
                var k;
                (k = $(c.customWaypoints[m])).on("click", (function (t) {
                    t.preventDefault(), $("body, html").stop().animate({
                        scrollTop: $("#" + $(this).attr("data-custom-scroll-to")).offset().top
                    }, 1e3, (function () {
                        o.trigger("resize")
                    }))
                }))
            }
        n.hasClass("wow-animation") && c.wow.length && l && (new WOW).init()
    })), c.countdown.length)
        for (let t = 0; t < c.countdown.length; t++) {
            let a = c.countdown[t];
            aCountdown({
                node: a,
                from: a.getAttribute("data-from"),
                to: a.getAttribute("data-to"),
                count: a.getAttribute("data-count"),
                tick: 100
            })
        }
}();
